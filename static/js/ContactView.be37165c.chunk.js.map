{"version":3,"file":"static/js/ContactView.be37165c.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/Input/InputText.tsx","components/Input/InputRadio.tsx","components/Dropdown/DropdownBase.tsx","components/Dropdown/DropdownRadioGroup.tsx","views/Contact/ContactBook/ContactBookSearch.tsx","views/Contact/ContactBook/ContactBookCharacter.tsx","views/Contact/ContactBook/ContactBookCharacterList.tsx","views/Contact/ContactBook/ContactBookView.tsx","views/Contact/ContactView.tsx"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import React from 'react';\n\ntype InputProp = {\n  id: string,\n  className?: string,\n}\ntype Props = InputProp & React.InputHTMLAttributes<HTMLInputElement>\n\nfunction InputText({\n  id,\n  className,\n  ...props\n}: Props) {\n  return (\n    <input\n      id={id}\n      type='text'\n      className={`border border-gray-300 px-1 ${className}`}\n      {...props}\n    />\n  )\n}\n\nexport default InputText\n","import React from 'react';\n\ntype InputProp = {\n  label: string,\n  value: string,\n  checked: boolean,\n  className?: string,\n  onChange?: Function,\n}\ntype Props = InputProp & React.InputHTMLAttributes<HTMLInputElement>\n\nfunction InputRadio({\n  id,\n  label,\n  value,\n  checked,\n  className,\n  onChange,\n}: Props) {\n  return (\n    <label className={`inline-flex hover:cursor-pointer ${className}`}>\n      <input\n        type='radio'\n        value={value}\n        checked={checked}\n        onChange={onChange}\n        className='mr-2'\n      />\n      { label }\n    </label>\n  )\n}\n\nexport default InputRadio\n","import {\n  useState,\n  useEffect,\n} from 'react';\n\ntype DropdownProps = {\n  placeholder?: string,\n  customLabel?: Function,\n  className?: string,\n  children?: Function,\n}\n\nfunction DropdownBase({\n  placeholder = '--',\n  customLabel,\n  className,\n  children\n}: DropdownProps) {\n  const [isOpen, setIsOpen] = useState(false)\n\n  function removeMenu(e: MouseEvent) {\n    e.stopPropagation()\n    setIsOpen(false)\n  }\n\n  function handleClick(e: React.MouseEvent<HTMLElement>) {\n    e.stopPropagation()\n    setIsOpen(!isOpen)\n  }\n\n  useEffect(() => {\n    if (isOpen) {\n      document.body.addEventListener('click', removeMenu)\n    } else {\n      document.body.removeEventListener('click', removeMenu)\n    }\n\n    return () => {\n      document.body.removeEventListener('click', removeMenu)\n    }\n  }, [isOpen])\n\n  return (\n    <div className={`relative ${className}`}>\n      <div \n        className=\"hover:cursor-pointer border border-gray-300 rounded-sm p-1 w-40\" \n        onClick={handleClick}\n      >\n        {(customLabel && customLabel()) || placeholder}\n        \n      </div>\n      {\n        isOpen &&\n        <div \n          className='absolute min-h-[10px] bg-white border border-gray-300 hover:cursor-pointer w-40 py-2 z-10'\n          onClick={e => e.stopPropagation()}\n        >\n          {children && children(setIsOpen)}\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default DropdownBase\n","import { useCallback, useState } from 'react';\nimport InputRadio from 'components/Input/InputRadio';\nimport DropdownBase from './DropdownBase';\n\ntype Radio = {\n  label: string,\n  value: string,\n}\n\ntype DropdownRadioGroupProps = {\n  radios: Radio[],\n  placeholder?: string,\n  className?: string,\n  onChange?: Function,\n}\n\nfunction DropdownRadioGroup({\n  radios,\n  placeholder,\n  className,\n  onChange,\n}: DropdownRadioGroupProps) {\n  const [selectedValue, setSelectedValue] = useState('')\n\n  function handleRadioChange(e: React.ChangeEvent<HTMLInputElement>, setIsOpen: Function) {\n    if(onChange) {\n      onChange(e.target.value)\n    }\n    setIsOpen(false)\n    setSelectedValue(e.target.value)\n  }\n\n  const clearActiveRadio = useCallback((e: React.MouseEvent<HTMLElement>) => {\n    if(onChange) {\n      onChange()\n    }\n    e.stopPropagation()\n    setSelectedValue('')\n  }, [onChange])\n\n  const customLabel = useCallback(() => {\n    if(selectedValue) {\n      const selectedRadio = radios.find(radio => radio.value === selectedValue);\n\n      return (\n        <div className='flex justify-between'>\n        {selectedRadio?.label}\n        <button onClick={clearActiveRadio}>X</button>\n      </div>\n      )\n    }\n\n    return ''\n  }, [radios, selectedValue, clearActiveRadio])\n\n  return (\n    <DropdownBase\n      className={className}\n      placeholder={placeholder}\n      customLabel={customLabel}\n    >\n      {(setIsOpen: Function) => (\n        <div className=\"flex flex-col space-y-2 mb-4\">\n          {\n            radios.map(radio => (\n              <InputRadio\n                key={radio.value}\n                className='pl-2 hover:bg-blue-100'\n                label={radio.label}\n                value={radio.value}\n                checked={selectedValue === radio.value}\n                onChange={(e) => handleRadioChange(e, setIsOpen)}\n              />\n            ))\n          }\n        </div>\n      )}\n    </DropdownBase>\n  )\n}\n\nexport default DropdownRadioGroup\n","import { Dispatch, SetStateAction } from 'react';\nimport InputText from 'components/Input/InputText';\nimport DropdownRadioGroup from 'components/Dropdown/DropdownRadioGroup';\n\ntype ContactBookSearchProps = {\n  setFilter: Dispatch<SetStateAction<Filter>>,\n}\n\ntype Props = ContactBookSearchProps & React.HTMLAttributes<HTMLDivElement>\n\nfunction ContactBookSearch({\n  className,\n  setFilter,\n}: Props) {\n  const statusRadios = [\n    { label: 'Alive', value: 'Alive' },\n    { label: 'Dead', value: 'Dead' },\n    { label: 'Unknown', value: 'unknown' },\n  ]\n  const genderRadios = [\n    { label: 'Male', value: 'Male' },\n    { label: 'Female', value: 'Female' },\n    { label: 'Genderless', value: 'Genderless' },\n    { label: 'Unknown', value: 'unknown' },\n  ]\n\n  function handleInput(e: React.ChangeEvent<HTMLInputElement>) {\n    setFilter((filter: Filter): Filter => ({\n      ...filter,\n      keyword: e.target.value\n    }))\n  }\n  function handleStatusChange(status: string) {\n    setFilter((filter: Filter): Filter => ({\n      ...filter,\n      status,\n    }))\n  }\n\n  function handleGenderChange(gender: string) {\n    setFilter((filter: Filter): Filter => ({\n      ...filter,\n      gender,\n    }))\n  }\n\n  return (\n    <div className={`px-4 pb-5 ${className}`}>\n      <h2 className=\"text-xl mb-2\">Contact</h2>\n      <InputText \n        placeholder='Search Characters' \n        id=\"character_search\" \n        className=\"mb-2\" \n        onInput={handleInput}\n      />\n      <div className='flex'>\n        <DropdownRadioGroup\n          placeholder=\"Status\"\n          radios={statusRadios}\n          className=\"mr-2\"\n          onChange={handleStatusChange}\n        />\n        <DropdownRadioGroup\n          placeholder=\"Gender\"\n          radios={genderRadios} \n          onChange={handleGenderChange}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default ContactBookSearch\n","import { useContext } from 'react';\nimport CharacterContext from 'context/CharacterContext';\nimport { NavLink } from \"react-router-dom\";\n\ntype ContactBookCharacterProps = {\n  character: Character;\n};\ntype Props = ContactBookCharacterProps & React.HTMLAttributes<HTMLAnchorElement>\n\nfunction ContactBookCharacter({ \n  character,\n  className,\n  ...props\n}: Props) {\n  const { setCharacter } = useContext(CharacterContext)\n  function handleClick(e: React.MouseEvent) {\n    e.stopPropagation()\n    setCharacter(character)\n  }\n\n  return (\n    <NavLink\n      to={String(character.id)}\n      className={`py-4 px-4 flex items-center ${className}`} \n      onClick={handleClick}\n      { ...props }\n    >\n      <img\n        src={character.image}\n        alt=\"Avatar\"\n        width=\"100\" \n        height=\"100\"\n        className=\"rounded-full mr-6\"\n      />\n      <div className=\"flex flex-col\">\n        <span className=\"mb-2\">{character.name}</span>\n        <span>{character.species}</span>\n      </div>\n    </NavLink>\n  );\n}\n\nexport default ContactBookCharacter;\n","import SERVICES from 'services';\nimport { useState, useEffect, useMemo } from 'react';\nimport ContactBookCharacter from './ContactBookCharacter';\n\ntype ContactBookCharacterListProps = {\n  filter: Filter\n}\ntype Props = ContactBookCharacterListProps & React.HTMLAttributes<HTMLDivElement>\n\nfunction ContactBookCharacterList({ filter }: Props) {\n  const [nextPageApi, setNextPageApi] = useState('https://rickandmortyapi.com/api/character')\n  const [pageInfo, setPageInfo] = useState<CharacterPageInfo|null>(null)\n  const [fetchedCharacters, setFetchedCharacters] = useState<Character[]>([])\n  const [characters, setCharacters] = useState<Character[]>([])\n  const [filteredCharacters, setFilteredCharacters] = useState<Character[]>([])\n\n  const intersectionObserver = useMemo(() => {\n    const options = {\n      root: document.querySelector('#characterListContainer'),\n      rootMargin: '0px',\n      threshold: 0\n    }\n\n    return new IntersectionObserver((entries) => {\n      if(entries[0].isIntersecting) {\n        if(pageInfo) {\n          setNextPageApi(pageInfo.next)\n        }\n        console.log(\"The item enters the viewpoint\");\n      }\n    }, options)\n  }, [pageInfo])\n\n  useEffect(() => {\n    const lastCharacterId = filteredCharacters[filteredCharacters.length-1]?.id\n\n    if(lastCharacterId) {\n      const lastCharacterElement = document.querySelector(`#character_${lastCharacterId}`) as Element\n\n      intersectionObserver.observe(lastCharacterElement)\n    }\n  }, [filteredCharacters, intersectionObserver]);\n\n  useEffect(() => {\n    async function getCharacters() {\n      const { info, characters } = await SERVICES.CHARACTER.getAll(nextPageApi);\n  \n      setFetchedCharacters(characters)\n      setPageInfo(info)\n    }\n    getCharacters()\n  }, [nextPageApi])\n\n  useEffect(() => {\n    setCharacters(prev => {\n      return [...prev, ...fetchedCharacters]\n    })\n  }, [fetchedCharacters])\n\n  useEffect(() => {\n    if(!Object.keys(filter).length) {\n      setFilteredCharacters(characters)\n\n      return\n    }\n\n    const filteredCharacters = characters.filter(character => {\n      return (!filter.keyword || character.name.toLowerCase().includes(filter.keyword.toLowerCase()) )\n        && (!filter.status || character.status === filter.status)\n        && (!filter.gender || character.gender === filter.gender)\n    })\n\n    setFilteredCharacters(filteredCharacters)\n  }, [filter, characters])\n\n  return (\n    <div id=\"characterListContainer\" className='h-full overflow-auto'>\n        {\n          filteredCharacters.map((character, index) => (\n            <ContactBookCharacter\n                id={`character_${character.id}`}\n                key={character.id}\n                character={character}\n                className={`hover:cursor-pointer hover:bg-blue-100 ${index !== filteredCharacters.length-1 ? 'border-b border-gray-300' : ''}`}\n              />\n          ))\n        }\n    </div>\n  )\n}\n\nexport default ContactBookCharacterList\n","import { useState, memo } from 'react';\nimport ContactBookSearch from './ContactBookSearch';\nimport ContactBookCharacterList from './ContactBookCharacterList';\n\ntype Props = React.HTMLAttributes<HTMLDivElement>\n\nconst ContactBook = memo(({ className, ...props }: Props) => {\n  const [filter, setFilter] = useState({})\n\n  return (\n    <div \n      className={`flex flex-col overflow-hidden ${className}`}\n      {...props}\n    >\n      <ContactBookSearch \n        className=\" border-b border-gray-300\"\n        setFilter={setFilter}\n      />\n      <ContactBookCharacterList\n      className=\"flex-auto\"\n      filter={filter}\n    />\n    </div>\n  )\n})\n\nexport default ContactBook\n","import { useState, Suspense } from 'react';\nimport { Outlet } from \"react-router-dom\";\nimport CharacterContext from 'context/CharacterContext';\nimport ContactBookView from './ContactBook/ContactBookView';\n\nfunction ContactView() {\n  const [character, setCharacter] = useState<Character|null>(null);\n\n  return (\n    <CharacterContext.Provider value={{\n      character,\n      setCharacter\n    }}>\n      <div className=\"grid grid-cols-contact overflow-hidden\">\n        <ContactBookView className=\"border-r border-gray-300\" />\n        <Suspense fallback={<div>Page is Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </CharacterContext.Provider>\n  )\n}\n\nexport default ContactView\n"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_ref","id","className","props","_excluded","_jsx","_objectSpread","type","concat","label","value","checked","onChange","_jsxs","children","_ref$placeholder","placeholder","customLabel","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","removeMenu","e","stopPropagation","useEffect","document","body","addEventListener","removeEventListener","onClick","radios","selectedValue","setSelectedValue","handleRadioChange","clearActiveRadio","useCallback","selectedRadio","find","radio","DropdownBase","map","InputRadio","setFilter","InputText","onInput","filter","keyword","DropdownRadioGroup","status","gender","character","setCharacter","useContext","CharacterContext","NavLink","to","String","src","image","alt","width","height","name","species","nextPageApi","setNextPageApi","_useState3","_useState4","pageInfo","setPageInfo","_useState5","_useState6","fetchedCharacters","setFetchedCharacters","_useState7","_useState8","characters","setCharacters","_useState9","_useState10","filteredCharacters","setFilteredCharacters","intersectionObserver","useMemo","options","root","querySelector","rootMargin","threshold","IntersectionObserver","entries","isIntersecting","next","console","log","_filteredCharacters","lastCharacterId","lastCharacterElement","observe","_getCharacters","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$SERVICES$CHARA","info","wrap","_context","prev","SERVICES","CHARACTER","getAll","sent","stop","apply","arguments","getCharacters","_toConsumableArray","toLowerCase","includes","index","ContactBookCharacter","memo","ContactBookSearch","ContactBookCharacterList","Provider","ContactBookView","Suspense","fallback","Outlet"],"sourceRoot":""}